#include <stdio.h>
#include <stdlib.h>

void scan(int arr[], int size, int head, int direction) {
    int seek_sequence[size + 1];
    int index = 0;
    int distance, seek_count = 0;
    int cur_track;

    // Sort the request array
    for (int i = 0; i < size; i++) {
        for (int j = i + 1; j < size; j++) {
            if (arr[i] > arr[j]) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }

    // Add the head to the seek sequence
    seek_sequence[index++] = head;

    // Move towards the end of the disk
    for (int i = 0; i < size; i++) {
        if (arr[i] >= head) {
            cur_track = arr[i];
            seek_sequence[index++] = cur_track;
            distance = abs(cur_track - head);
            seek_count += distance;
            head = cur_track;
        }
    }

    // Move towards the beginning of the disk
    if (direction == 1) {
        head = 0;
        seek_sequence[index++] = head;
        for (int i = size - 1; i >= 0; i--) {
            if (arr[i] < head) {
                cur_track = arr[i];
                seek_sequence[index++] = cur_track;
                distance = abs(cur_track - head);
                seek_count += distance;
                head = cur_track;
            }
        }
    }

    printf("Total seek time: %d\n", seek_count);
    printf("Seek sequence: ");
    for (int i = 0; i < index; i++) {
        printf("%d ", seek_sequence[i]);
    }
    printf("\n");
}

int main() {
    int arr[] = { 98, 183, 37, 122, 14, 124, 65, 67 };
    int size = sizeof(arr) / sizeof(arr[0]);
    int head = 53; // Initial head position
    int direction = 1; // 1 for right, 0 for left

    scan(arr, size, head, direction);
    return 0;
}
